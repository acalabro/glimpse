import eu.learnpad.simulator.mon.event.GlimpseBaseEventAbstract; 
import eu.learnpad.simulator.mon.event.GlimpseBaseEventBPMN; 
import eu.learnpad.sim.rest.event.impl.SimulationStartEvent; 
import eu.learnpad.sim.rest.event.impl.SimulationEndEvent; 
import eu.learnpad.sim.rest.event.impl.ProcessStartEvent; 
import eu.learnpad.sim.rest.event.impl.ProcessEndEvent; 
import eu.learnpad.sim.rest.event.impl.TaskStartEvent; 
import eu.learnpad.sim.rest.event.impl.TaskFailedEvent; 
import eu.learnpad.sim.rest.event.impl.TaskEndEvent; 
import eu.learnpad.sim.rest.event.impl.SessionScoreUpdateEvent; 
import eu.learnpad.sim.rest.event.impl.ScoreUpdateEvent; 
import eu.learnpad.sim.rest.event.EventType;
import eu.learnpad.simulator.mon.manager.ResponseDispatcher; 
import eu.learnpad.simulator.mon.manager.RestNotifier; 
import eu.learnpad.simulator.mon.storage.ScoreTemporaryStorage;
        
declare GlimpseBaseEventBPMN
    @role( event )
    @timestamp( timeStamp )
end 
        
rule "Forward to the CP - SimulationStart" 

no-loop true 
salience 1 
dialect "java" 

when 
 	$bEvent:GlimpseBaseEventBPMN(
		this.isConsumed == false,
		this.isException == false,
		this.getEventName == EventType.SIMULATION_START.toString()); 
then			
	RestNotifier.notifySimulationStart($bEvent.getTimeStamp(), (SimulationStartEvent)$bEvent.getEvent());
end 

rule "Forward to the CP - SimulationEnd" 
no-loop true  

salience 98 

dialect "java" 

when  
	 $aEvent:GlimpseBaseEventBPMN(
	 	this.isConsumed == false,
	 	this.isException == false,
		this.getEventName == EventType.SIMULATION_END.toString()); 
then	 		 	
	RestNotifier.notifySimulationEnd($aEvent.getTimeStamp(), (SimulationEndEvent)$aEvent.getEvent());
end 

rule "Forward to the CP - ProcessStart"  
no-loop true  

salience 1  

dialect "java" 

when 
 	 $aEvent : GlimpseBaseEventBPMN(
 		this.isConsumed == false,
 		this.isException == false,
 		this.getEventName == EventType.PROCESS_START.toString()); 
then
	$aEvent.setConsumed(true); 
	update($aEvent); 		 
 	RestNotifier.notifyProcessStart($aEvent.getTimeStamp(), (ProcessStartEvent)$aEvent.getEvent());
 	retract($aEvent);
end 
 
rule "Forward to the CP - ProcessEnd"  
no-loop true  

salience 1  

dialect "java"  

when  
	 $aEvent : GlimpseBaseEventBPMN(
	 	this.isConsumed == false,
	 	this.isException == false,
		this.getEventName == EventType.PROCESS_END.toString()); 
then	 	
	$aEvent.setConsumed(true); 
	update($aEvent); 
 	RestNotifier.notifyProcessEnd($aEvent.getTimeStamp(), (ProcessEndEvent)$aEvent.getEvent());		
 	retract($aEvent);	
end  

rule "Forward to the CP - TaskStart"  
no-loop true  
 
salience 99  

dialect "java"  

when  
	 $aEvent : GlimpseBaseEventBPMN(
	 	this.isConsumed == false,
	 	this.isException == false,
		this.getEventName == EventType.TASK_START.toString());  
then
	$aEvent.setConsumed(true); 
	update($aEvent); 	 	
 	RestNotifier.notifyTaskStart($aEvent.getTimeStamp(), (TaskStartEvent)$aEvent.getEvent());
 	retract($aEvent);			
end 

rule "Forward to the CP - TaskFailed" 
no-loop true 

salience 1 

dialect "java" 

when 
	$aEvent : GlimpseBaseEventBPMN(
		this.isConsumed == false,
		this.isException == false,
		this.getEventName == EventType.TASK_FAILED.toString());  
then 		 
	$aEvent.setConsumed(true); 
	update($aEvent); 
	RestNotifier.notifyTaskFailed($aEvent.getTimeStamp(), (TaskFailedEvent)$aEvent.getEvent()); 	
	retract($aEvent);	
end 

rule "Forward to the CP - TaskEnd" 
no-loop true 

salience 99 

dialect "java" 

when 
 	$aEvent : GlimpseBaseEventBPMN(
		this.isConsumed == false,
		this.isException == false,
		this.getEventName == EventType.TASK_END.toString());  
then
	RestNotifier.notifyTaskEnd($aEvent.getTimeStamp(), (TaskEndEvent)$aEvent.getEvent()); 		 	
end   

rule "Save in tempStructure the SessionScoreUpdate value" 
no-loop true 

salience 999999 

dialect "java" 

when 
 	$aEvent : GlimpseBaseEventBPMN(
		this.isConsumed == false,
		this.isException == false,
		this.getEventName == EventType.SESSION_SCORE_UPDATE.toString());  
then		
	$aEvent.setConsumed(true); 
	update($aEvent); 
	ScoreTemporaryStorage.setTemporaryLearnerSessionScore(
									$aEvent.getSessionScoreUpdateEvent().user.toString(), 
									$aEvent.getSessionScoreUpdateEvent());
	ScoreTemporaryStorage.setLastScoreUpdateEventSeen($aEvent.getSessionScoreUpdateEvent());
	retract($aEvent);		 	
end  